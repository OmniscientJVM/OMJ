plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.8'
}

description = "The UI."

dependencies {
    // Other projects
    implementation(project(":util"))
    implementation(project(":logging"))
    // Need to dynamically load the agent jar
    runtimeOnly(project(path: ":agent", configuration: "shadow"))
}

javafx {
    version = '14'
    modules = ['javafx.base', 'javafx.controls']
}

application {
    mainClassName = "com.octogonapus.omj.ui.MainUI"
}

def agentJarName = "agent-all"
def agentJarAllResource = buildDir.toPath().resolve(agentJarName)

def copyAgentShadowJarTask = task("copyAgentShadowJar", type: Copy) {
    dependsOn(":agent:shadowJar")
    from({ project(":agent").tasks.named("shadowJar") })
    into(buildDir)
    rename { agentJarName }
}

shadowJar {
    dependsOn(copyAgentShadowJarTask)
    from({ agentJarAllResource })
}
