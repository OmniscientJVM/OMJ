plugins {
    id 'com.github.johnrengelman.shadow' version '5.2.0'
}

description = "The Agent."

dependencies {
    // Bytecode instrumentation
    implementation group: "org.ow2.asm", name: "asm", version: property("asm.version")
    implementation group: "org.ow2.asm", name: "asm-util", version: property("asm.version")
    implementation group: "net.bytebuddy", name: "byte-buddy", version: property("byte-buddy.version")

    // Other projects
    implementation(project(":agent-lib"))
    implementation(project(":util"))
    implementation(project(":logging"))

    // Need the agent (yes, THIS project) shadow jar at runtime to dynamically load the agent-lib
    testRuntime project(path: ":agent", configuration: "shadow")
}

jar {
    manifest {
        attributes(
                "Premain-Class": "com.octogonapus.omj.agent.Agent",
                "Can-Redefine-Classes": "true",
                "Can-Retransform-Classes": "true",
                "Can-Set-Native-Method-Prefix": "true"
        )
    }
}

def agentLibJarName = "agent-lib-all"
def agentLibAllJarResource = buildDir.toPath().resolve(agentLibJarName)

def copyAgentLibShadowJarTask = task("copyAgentLibShadowJar", type: Copy) {
    dependsOn(":agent-lib:shadowJar")
    from({ project(":agent-lib").tasks.named("shadowJar") })
    into(buildDir)
    rename { agentLibJarName }
}

shadowJar {
    dependsOn(copyAgentLibShadowJarTask)
    from({ agentLibAllJarResource })
}
