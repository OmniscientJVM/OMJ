import com.adarshr.gradle.testlogger.theme.ThemeType
import org.gradle.api.tasks.testing.logging.TestExceptionFormat
import org.gradle.api.tasks.testing.logging.TestLogEvent

plugins {
    id 'java-library'
    id "com.diffplug.gradle.spotless" version "3.29.0"
    id 'com.adarshr.test-logger' version '2.0.0'
    id 'jacoco'
}

group 'com.octogonapus'
version '0.1.0'

allprojects {
    apply plugin: 'com.diffplug.gradle.spotless'
    apply plugin: 'com.adarshr.test-logger'

    repositories {
        mavenCentral()
    }

    pluginManager.withPlugin("jacoco") {
        jacoco {
            toolVersion = property("jacoco-tool.version")
        }
    }

    test {
        testLogging {
            showStandardStreams = true
            exceptionFormat = TestExceptionFormat.FULL
        }
    }

    testlogger {
        theme = ThemeType.STANDARD_PARALLEL
        showStandardStreams = true
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'jacoco'

    java {
        sourceCompatibility = JavaVersion.VERSION_14
        targetCompatibility = JavaVersion.VERSION_14
    }

    compileJava {
        options.encoding = "UTF-8"
        options.incremental = true
    }

    test {
        useJUnitPlatform {
            filter {
                includeTestsMatching("*Test")
                includeTestsMatching("*Tests")
                includeTestsMatching("*Spec")
            }

            /*
            These tests just test performance and should not run in CI.
             */
            excludeTags("performance")

            /*
            These tests are too slow to run in CI.
             */
            excludeTags("slow")

            testLogging {
                events(
                        TestLogEvent.FAILED,
                        TestLogEvent.PASSED,
                        TestLogEvent.SKIPPED,
                        TestLogEvent.STARTED
                )
                displayGranularity = 0
                showExceptions = true
                showCauses = true
                showStackTraces = true
                exceptionFormat = TestExceptionFormat.FULL
                showStandardStreams = true
            }

            reports.junitXml.destination = file(rootProject.buildDir.toPath().resolve("test-results").resolve(project.name))
        }
    }

    jacocoTestReport {
        dependsOn(test)
        reports {
            html.enabled = true
            xml.enabled = true
            csv.enabled = false
        }
    }

    spotless {
        java {
            googleJavaFormat("1.8")
            removeUnusedImports()
            trimTrailingWhitespace()
            endWithNewline()
            licenseHeaderFile(rootProject.rootDir.toPath().resolve("config").resolve("spotless").resolve("omj.license"))
        }
    }
}

apply from: "gradle/jacocoRootReport.gradle.kts"

wrapper {
    distributionType = Wrapper.DistributionType.ALL
    version = "6.4.1"
}
